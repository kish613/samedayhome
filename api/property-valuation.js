// Vercel API route for property valuation (OpenAI only)
const OPENAI_API_KEY = process.env.OPENAI_API_KEY

export default async function handler(req, res) {
  // Enable CORS
  res.setHeader('Access-Control-Allow-Origin', '*')
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS')
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type')

  if (req.method === 'OPTIONS') {
    res.status(200).end()
    return
  }

  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' })
  }

  // DEBUG: Check environment variables
  console.log('üîß Environment Check:')
  console.log('OPENAI_API_KEY exists:', !!OPENAI_API_KEY)
  console.log('OPENAI_API_KEY length:', OPENAI_API_KEY?.length || 0)

  try {
    const { formData } = req.body

    if (!formData || !formData.postcode) {
      return res.status(400).json({ error: 'Property data required' })
    }

    console.log('üìä Form Data Received:', JSON.stringify(formData, null, 2))

    // Validate OpenAI API key
    if (!OPENAI_API_KEY) {
      console.error('‚ùå OpenAI API key missing')
      return res.status(500).json({ error: 'OpenAI API key not configured' })
    }

    // Create comprehensive prompt for OpenAI based on form data
    const prompt = `You are a professional UK property valuation expert with extensive knowledge of the UK property market across all regions.

Based on the following property details, provide a comprehensive property valuation and cash offer analysis:

PROPERTY DETAILS:
- Postcode: ${formData.postcode}
- Property Type: ${formData.propertyType || 'Not specified'}
- Bedrooms: ${formData.bedrooms || 'Not specified'}
- Bathrooms: ${formData.bathrooms || 'Not specified'}
- Property Condition: ${formData.condition || 'Not specified'}

Please provide a detailed analysis including:

1. **Estimated Market Value Range**: Based on the postcode area and property details
2. **Quick Sale Valuation**: Realistic value for a quick cash sale (typically 10-20% below market value)
3. **Same Day Home Buyer Cash Offer**: Our competitive cash offer (usually 75-85% of market value)
4. **Area Analysis**: Brief analysis of the property location and market trends
5. **Property Assessment**: Evaluation based on the provided details
6. **Rental Yield Estimate**: Potential rental income and yield percentage
7. **Investment Potential**: Brief assessment of investment viability

Format your response as a professional property valuation report. Use realistic UK property values based on current market conditions for the specified postcode area. Be specific with numbers and ranges.

Ensure all valuations are realistic and based on actual UK property market knowledge. Consider factors like:
- Regional property values
- Property type and size
- Current market conditions
- Quick sale discounts typically applied
- Investor purchase criteria

Provide confident, professional estimates that a real estate professional would give.`

    console.log('ü§ñ Calling OpenAI API...')

    // Call OpenAI API
    const openaiResponse = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${OPENAI_API_KEY}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini',
        messages: [
          {
            role: 'system',
            content: 'You are a professional UK property valuation expert with deep knowledge of the UK property market across all regions and property types.'
          },
          {
            role: 'user',
            content: prompt
          }
        ],
        max_tokens: 2000,
        temperature: 0.7,
      }),
    })

    console.log('üì° OpenAI Response Status:', openaiResponse.status)

    if (!openaiResponse.ok) {
      const errorText = await openaiResponse.text()
      console.error('‚ùå OpenAI API Error:', errorText)
      return res.status(500).json({ 
        error: 'OpenAI API error',
        details: errorText
      })
    }

    const openaiData = await openaiResponse.json()
    console.log('‚úÖ OpenAI Response Success')

    const analysis = openaiData.choices[0].message.content

    // Return successful response
    const response = {
      success: true,
      valuation: {
        marketValue: 'Generated by AI analysis',
        quickSaleValue: 'Generated by AI analysis', 
        cashOffer: 'Generated by AI analysis',
        analysis: analysis,
        propertyDetails: formData,
        generatedAt: new Date().toISOString(),
        source: 'OpenAI GPT-4o-mini Analysis'
      }
    }

    console.log('üéâ Sending successful response')
    return res.status(200).json(response)

  } catch (error) {
    console.error('üí• Unexpected error:', error)
    return res.status(500).json({ 
      error: 'Internal server error',
      details: error.message 
    })
  }
}